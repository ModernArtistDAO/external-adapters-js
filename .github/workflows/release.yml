on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release

jobs:
  release:
    name: Create Release & Upload Release Asset
    runs-on: ubuntu-latest
    # TODO: only if tests pass (needs: [test])
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        run: yarn
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish-artifacts step
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  publish-npm-packages:
    needs: [release]
    name: Publish NPM Packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
          # Defaults to the user or organization that owns the workflow file
          scope: '@chainlink'
      - run: yarn
      # Publish @chainlink/external-adapter
      - run: cp .npmrc ./external-adapter # Yarn bug: not considering root .npmrc
      - run: yarn workspace @chainlink/external-adapter install
      - run: yarn workspace @chainlink/external-adapter publish --non-interactive --access public
      # Publish @chainlink/ea-bootstrap
      - run: cp .npmrc ./ea-bootstrap # Yarn bug: not considering root .npmrc
      - run: yarn workspace @chainlink/ea-bootstrap install
      - run: yarn workspace @chainlink/ea-bootstrap publish --non-interactive --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-artifacts:
    needs: [release]
    runs-on: ubuntu-latest
    name: Publish GitHub Release adapter zips
    strategy:
      matrix:
        adapter:
          [
            metalsapi,
            bravenewcoin-vwap,
            dxfeed,
            tradingeconomics,
            marketstack,
            nikkei,
            binance-dex,
            alphavantage-sdr,
            nomics,
            1forge,
            alphavantage,
            amberdata,
            bravenewcoin,
            coinapi,
            coingecko,
            coinmarketcap,
            coinpaprika,
            cryptoapis,
            cryptocompare,
            currencylayer,
            eodhistoricaldata,
            fcsapi,
            finnhub,
            fixer,
            fmpcloud,
            kaiko,
            oilpriceapi,
            openexchangerates,
            polygon,
            yahoo-finance,
            google-finance,
            etherchain,
            poa-gasprice,
            anyblock-gasprice,
            ethgasstation,
            amberdata-gasprice,
          ]
    steps:
      - uses: actions/checkout@v2
      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Build
        run: make zip adapter=${{ matrix.adapter }}
      - name: Get Release File Name & Upload URL
        id: get_release_info
        run: |
          echo ::set-output name=file_name::${REPOSITORY_NAME##*/}-${TAG_REF_NAME##*/v} # RepositoryName-v1.0.0
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
        env:
          TAG_REF_NAME: ${{ github.ref }}
          REPOSITORY_NAME: ${{ github.repository }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./${{ matrix.adapter }}/dist/${{ matrix.adapter }}-adapter.zip
          asset_name: ${{ steps.get_release_info.outputs.file_name }}-${{ matrix.adapter }}-adapter.zip
          asset_content_type: application/zip

  publish-synth-index-artifacts:
    needs: [release]
    name: Publish GitHub Release synth-index adapter zips
    runs-on: ubuntu-latest
    strategy:
      matrix:
        adapter:
          [
            coinapi,
            coingecko,
            coinmarketcap,
            coinpaprika,
            bravenewcoin,
            cryptocompare,
            amberdata,
          ]
    steps:
      - uses: actions/checkout@v2
      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Build
        run: make zip-synth-index adapter=${{ matrix.adapter }}
      - name: Get Release File Name & Upload URL
        id: get_release_info
        run: |
          echo ::set-output name=file_name::${REPOSITORY_NAME##*/}-${TAG_REF_NAME##*/v} # RepositoryName-v1.0.0
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
        env:
          TAG_REF_NAME: ${{ github.ref }}
          REPOSITORY_NAME: ${{ github.repository }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./synth-index/${{ matrix.adapter }}/dist/synth-index-${{ matrix.adapter }}-adapter.zip
          asset_name: ${{ steps.get_release_info.outputs.file_name }}-synth-index-${{ matrix.adapter }}-adapter.zip
          asset_content_type: application/zip

  publish-market-closure-artifacts:
    needs: [release]
    name: Publish GitHub Release market-closure adapter zips
    runs-on: ubuntu-latest
    strategy:
      matrix:
        adapter: [finnhub, fcsapi]
        check: [tradinghours, schedule]
    steps:
      - uses: actions/checkout@v2
      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Build
        run: make zip-market-closure adapter=${{ matrix.adapter }} check=${{ matrix.check }}
      - name: Get Release File Name & Upload URL
        id: get_release_info
        run: |
          echo ::set-output name=file_name::${REPOSITORY_NAME##*/}-${TAG_REF_NAME##*/v} # RepositoryName-v1.0.0
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
        env:
          TAG_REF_NAME: ${{ github.ref }}
          REPOSITORY_NAME: ${{ github.repository }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./market-closure/${{ matrix.check }}/dist/${{ matrix.adapter }}-${{ matrix.check }}-adapter.zip
          asset_name: ${{ steps.get_release_info.outputs.file_name }}-market-closure-${{ matrix.adapter }}-${{ matrix.check }}-adapter.zip
          asset_content_type: application/zip

  publish-2-step-artifacts:
    needs: [release]
    name: Publish GitHub Release 2-step adapter zips
    runs-on: ubuntu-latest
    strategy:
      matrix:
        adapter:
          [
            coinapi,
            coingecko,
            coinmarketcap,
            coinpaprika,
            bravenewcoin,
            cryptocompare,
            amberdata,
          ]
    steps:
      - uses: actions/checkout@v2
      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Build
        run: make zip-2-step adapter=${{ matrix.adapter }}
      - name: Get Release File Name & Upload URL
        id: get_release_info
        run: |
          echo ::set-output name=file_name::${REPOSITORY_NAME##*/}-${TAG_REF_NAME##*/v} # RepositoryName-v1.0.0
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
        env:
          TAG_REF_NAME: ${{ github.ref }}
          REPOSITORY_NAME: ${{ github.repository }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./2-step/${{ matrix.adapter }}/dist/${{ matrix.adapter }}-2-step-adapter.zip
          asset_name: ${{ steps.get_release_info.outputs.file_name }}-${{ matrix.adapter }}-2-step-adapter.zip
          asset_content_type: application/zip
